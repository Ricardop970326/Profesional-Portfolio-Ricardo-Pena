{"ast":null,"code":"var _jsxFileName = \"/Users/ricardopena/Desktop/mac/e-commercevr2c14/src/contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../src/css/contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contact() {\n  _s();\n  // State to store form data\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  // State to track touched status of each field\n  const [touchedFields, setTouchedFields] = useState({\n    name: false,\n    phone: false,\n    email: false,\n    subject: false,\n    message: false\n  });\n\n  // Function to get border color for each field based on validation rules\n  const getBorderColor = field => {\n    const isEmpty = formData[field].trim() === ''; // Check if field is empty\n    const hasNumber = field === 'name' ? /\\d/.test(formData[field]) : false; // Check if name field contains numbers\n    const isValidEmail = field === 'email' ? formData[field].includes('@') : true; // Check if email field is a valid email address\n\n    const borderColor = touchedFields[field] ? isEmpty || hasNumber || !isValidEmail ? 'red' : 'green' : 'transparent'; // Set border color based on validation rules\n\n    console.log(`Field: ${field}, IsEmpty: ${isEmpty}, HasNumber: ${hasNumber}, IsValidEmail: ${isValidEmail}, BorderColor: ${borderColor}`);\n    return borderColor;\n  };\n\n  // Function to handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Mark the field as touched\n    setTouchedFields({\n      ...touchedFields,\n      [name]: true\n    });\n\n    // Update the form data\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate form fields\n    const isValid = Object.entries(formData).every(([key, value]) => {\n      switch (key) {\n        case 'name':\n          if (value.trim() === '') {\n            alert('Please enter your name.'); // Display an error message for empty name field\n            return false;\n          }\n          if (/\\d/.test(value)) {\n            alert('Name cannot contain numbers.'); // Display an error message if name field contains numbers\n            return false;\n          }\n          return /^[A-Za-z]{1,15}$/.test(value);\n        // Validate name field against a regex pattern\n        case 'phone':\n          if (value.trim() === '' || value.length < 10) {\n            alert('Please enter a valid phone number with at least 10 digits.'); // Display an error message for an invalid or empty phone field\n            return false;\n          }\n          if (!/^[0-9+]{10,}$/.test(value)) {\n            alert('Phone number can only contain numbers and the + symbol.'); // Display an error message if phone field contains invalid characters\n            return false;\n          }\n          return true;\n        case 'email':\n          if (!value.includes('@')) {\n            alert('Please enter a valid email address with \"@\" symbol.'); // Display an error message for an invalid email field\n            return false;\n          }\n          return true;\n        case 'subject':\n          if (value.trim() === '') {\n            alert('Please enter a subject.'); // Display an error message for an empty subject field\n            return false;\n          }\n          return value.length <= 20;\n        // Limit subject field length to 20 characters\n        case 'message':\n          if (value.trim() === '') {\n            alert('Please enter a message.'); // Display an error message for an empty message field\n            return false;\n          }\n          return value.length <= 40;\n        // Limit message field length to 40 characters\n        default:\n          return true;\n      }\n    });\n    if (isValid) {\n      // Form is valid, submit the data or perform further actions\n      // Example: You can use Formspree or any other service to handle form submission\n      console.log('Form submitted:', formData);\n    } else {\n      // Optionally, display an error message or take other actions\n      console.log('Form validation failed. Please check the fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"formcontact\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"contactForm\",\n          onsubmit: \"validateForm(event)\",\n          action: \"https://formspree.io/f/xwkdywrd\",\n          method: \"POST\",\n          name: \"myform\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"containercont\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Reach Out to Us. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"We Are Just a Message Away!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Write Your Request\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"name\",\n                  name: \"name\",\n                  onChange: handleChange,\n                  style: {\n                    borderColor: getBorderColor('name')\n                  },\n                  \"aria-label\": \"Name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"phone\",\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"phone\",\n                  type: \"number\",\n                  name: \"phone\",\n                  onChange: handleChange,\n                  placeholder: \"000 000 0000\",\n                  style: {\n                    borderColor: getBorderColor('phone')\n                  },\n                  \"aria-label\": \"Phone\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  style: {\n                    borderColor: getBorderColor('email')\n                  },\n                  \"aria-label\": \"Email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"subject\",\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"subject\",\n                  onChange: handleChange,\n                  style: {\n                    borderColor: getBorderColor('subject')\n                  },\n                  \"aria-label\": \"Subject\"\n                  /*required*/\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"message\",\n                  children: \"Message:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"message\",\n                  name: \"message\",\n                  onChange: handleChange,\n                  rows: 4,\n                  style: {\n                    borderColor: getBorderColor('message')\n                  },\n                  \"aria-label\": \"Message\",\n                  defaultValue: \"\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"send\",\n                  id: \"contact\",\n                  type: \"Submit\",\n                  children: \"SEND\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// import React, { useState } from 'react';\n// import \"../src/css/contact.css\";\n// import Navbar from \"./components/navbar\";\n// import Footer from \"./components/footer\";\n\n// export default function Contact() {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     phone: '',\n//     email: '',\n//     subject: '',\n//     message: ''\n//   });\n\n//   // State to track touched status of each field\n//   const [touchedFields, setTouchedFields] = useState({\n//     name: false,\n//     phone: false,\n//     email: false,\n//     subject: false,\n//     message: false\n//   });\n\n//   const getBorderColor = (field) => {\n//     const isEmpty = formData[field].trim() === '';\n//     const hasNumber = field === 'name' ? /\\d/.test(formData[field]) : false;\n//     const isValidEmail = field === 'email' ? formData[field].includes('@') : true;\n\n//     const borderColor = touchedFields[field] ? (isEmpty || hasNumber || !isValidEmail ? 'red' : 'green') : 'transparent';\n\n//     console.log(`Field: ${field}, IsEmpty: ${isEmpty}, HasNumber: ${hasNumber}, IsValidEmail: ${isValidEmail}, BorderColor: ${borderColor}`);\n\n//     return borderColor;\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     // Mark the field as touched\n//     setTouchedFields({ ...touchedFields, [name]: true });\n\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Validate form fields\n//     const isValid = Object.entries(formData).every(([key, value]) => {\n//       switch (key) {\n//         case 'name':\n//           if (value.trim() === '') {\n//             alert('Please enter your name.');\n//             return false;\n//           }\n//           if(/\\d/.test(value)) {\n//             alert('Name cannot contain numbers.');\n//             return false;\n//           }\n//           return /^[A-Za-z]{1,15}$/.test(value);\n//         case 'phone':\n//           if (value.trim() === '' || value.length < 10) {\n//             alert('Please enter a valid phone number with at least 10 digits.');\n//             return false;\n//           }\n//           if (!/^[0-9+]{10,}$/.test(value)) {\n//             alert('Phone number can only contain numbers and the + symbol.');\n//             return false;\n//           }\n//           return true;\n//         case 'email':\n//           if (!value.includes('@')) {\n//             alert('Please enter a valid email address with \"@\" symbol.');\n//             return false;\n//           }\n//           return true;\n//         case 'subject':\n//           if (value.trim() === '') {\n//             alert('Please enter a subject.');\n//             return false;\n//           }\n//           return value.length <= 20;\n//         case 'message':\n//           if (value.trim() === '') {\n//             alert('Please enter a message.');\n//             return false;\n//           }\n//           return value.length <= 40;\n//         default:\n//           return true;\n//       }\n//     });\n\n//     if (isValid) {\n//       // Form is valid, submit the data or perform further actions\n//       // Example: You can use Formspree or any other service to handle form submission\n//       console.log('Form submitted:', formData);\n//     } else {\n//       // Optionally, display an error message or take other actions\n//       console.log('Form validation failed. Please check the fields.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <main>\n//         <div id=\"formcontact\">\n//         <form\n//       id=\"contactForm\"\n//       onsubmit=\"validateForm(event)\"\n//       action=\"https://formspree.io/f/xwkdywrd\"\n//       method=\"POST\"\n//       name=\"myform\"\n//       onSubmit={handleSubmit} >\n//             <div className=\"containercont\">\n//               <h1>Reach Out to Us. </h1>\n//               <h1>We Are Just a Message Away!</h1>\n//               <br />\n//               <div className=\"contact-box\">\n//                 <div className=\"contact\">\n//                   <h2>Write Your Request</h2>\n//                   <br />\n//                   <label htmlFor=\"name\">Name:</label>\n//                   <input\n//                     type=\"text\"\n//                     id=\"name\"\n//                     name=\"name\"\n//                     onChange={handleChange}\n//                     style={{ borderColor: getBorderColor('name') }}\n//                     aria-label=\"Name\"\n//                   required/>\n\n//                   <label htmlFor=\"phone\">Phone:</label>\n//                   <input\n//                     id=\"phone\"\n//                     type=\"number\"\n//                     name=\"phone\"\n//                     onChange={handleChange}\n//                     placeholder=\"000 000 0000\"\n//                     style={{ borderColor: getBorderColor('phone') }}\n//                     aria-label=\"Phone\"\n//                     required/>\n\n//                   <label htmlFor=\"email\">Email:</label>\n//                   <input\n//                     type=\"email\"\n//                     id=\"email\"\n//                     name=\"email\"\n//                     onChange={handleChange}\n//                     style={{ borderColor: getBorderColor('email') }}\n//                     aria-label=\"Email\"\n//                     required/>\n\n//                   <label htmlFor=\"subject\">Subject:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"subject\"\n//                     onChange={handleChange}\n//                     style={{ borderColor: getBorderColor('subject') }}\n//                     aria-label=\"Subject\"\n//                     /*required*//>\n\n//                   <label htmlFor=\"message\">Message:</label>\n//                   <textarea\n//                     id=\"message\"\n//                     name=\"message\"\n//                     onChange={handleChange}\n//                     rows={4}\n//                     style={{ borderColor: getBorderColor('message') }}\n//                     aria-label=\"Message\"\n//                     defaultValue={\"\"}\n//                     required/>\n//                   <button className=\"send\" id=\"contact\" type=\"Submit\">\n//                     SEND\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </form>\n//         </div>\n//       </main>\n//       <Footer />\n//     </>\n//   );\n// }\n_s(Contact, \"3rhFSwt6H1hBMQThwac9FS0ji/I=\");\n_c = Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Contact","_s","formData","setFormData","name","phone","email","subject","message","touchedFields","setTouchedFields","getBorderColor","field","isEmpty","trim","hasNumber","test","isValidEmail","includes","borderColor","console","log","handleChange","e","value","target","handleSubmit","preventDefault","isValid","Object","entries","every","key","alert","length","children","id","onsubmit","action","method","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","style","required","placeholder","rows","defaultValue","_c","$RefreshReg$"],"sources":["/Users/ricardopena/Desktop/mac/e-commercevr2c14/src/contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport \"../src/css/contact.css\";\n\n\nexport default function Contact() {\n  // State to store form data\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  // State to track touched status of each field\n  const [touchedFields, setTouchedFields] = useState({\n    name: false,\n    phone: false,\n    email: false,\n    subject: false,\n    message: false\n  });\n\n  // Function to get border color for each field based on validation rules\n  const getBorderColor = (field) => {\n    const isEmpty = formData[field].trim() === ''; // Check if field is empty\n    const hasNumber = field === 'name' ? /\\d/.test(formData[field]) : false; // Check if name field contains numbers\n    const isValidEmail = field === 'email' ? formData[field].includes('@') : true; // Check if email field is a valid email address\n\n    const borderColor = touchedFields[field] ? (isEmpty || hasNumber || !isValidEmail ? 'red' : 'green') : 'transparent'; // Set border color based on validation rules\n\n    console.log(`Field: ${field}, IsEmpty: ${isEmpty}, HasNumber: ${hasNumber}, IsValidEmail: ${isValidEmail}, BorderColor: ${borderColor}`);\n\n    return borderColor;\n  };\n\n  // Function to handle form field changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    // Mark the field as touched\n    setTouchedFields({ ...touchedFields, [name]: true });\n\n    // Update the form data\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validate form fields\n    const isValid = Object.entries(formData).every(([key, value]) => {\n      switch (key) {\n        case 'name':\n          if (value.trim() === '') {\n            alert('Please enter your name.'); // Display an error message for empty name field\n            return false;\n          }\n          if(/\\d/.test(value)) {\n            alert('Name cannot contain numbers.'); // Display an error message if name field contains numbers\n            return false;\n          }\n          return /^[A-Za-z]{1,15}$/.test(value); // Validate name field against a regex pattern\n        case 'phone':\n          if (value.trim() === '' || value.length < 10) {\n            alert('Please enter a valid phone number with at least 10 digits.'); // Display an error message for an invalid or empty phone field\n            return false;\n          }\n          if (!/^[0-9+]{10,}$/.test(value)) {\n            alert('Phone number can only contain numbers and the + symbol.'); // Display an error message if phone field contains invalid characters\n            return false;\n          }\n          return true;\n        case 'email':\n          if (!value.includes('@')) {\n            alert('Please enter a valid email address with \"@\" symbol.'); // Display an error message for an invalid email field\n            return false;\n          }\n          return true;\n        case 'subject':\n          if (value.trim() === '') {\n            alert('Please enter a subject.'); // Display an error message for an empty subject field\n            return false;\n          }\n          return value.length <= 20; // Limit subject field length to 20 characters\n        case 'message':\n          if (value.trim() === '') {\n            alert('Please enter a message.'); // Display an error message for an empty message field\n            return false;\n          }\n          return value.length <= 40; // Limit message field length to 40 characters\n        default:\n          return true;\n      }\n    });\n\n    if (isValid) {\n      // Form is valid, submit the data or perform further actions\n      // Example: You can use Formspree or any other service to handle form submission\n      console.log('Form submitted:', formData);\n    } else {\n      // Optionally, display an error message or take other actions\n      console.log('Form validation failed. Please check the fields.');\n    }\n  };\n\n\n  \n\n  return (\n    <>\n      <main>\n        <div id=\"formcontact\">\n        <form\n      id=\"contactForm\"\n      onsubmit=\"validateForm(event)\"\n      action=\"https://formspree.io/f/xwkdywrd\"\n      method=\"POST\"\n      name=\"myform\"\n       >\n            <div className=\"containercont\">\n              <h1>Reach Out to Us. </h1>\n              <h1>We Are Just a Message Away!</h1>\n              <br />\n              <div className=\"contact-box\">\n                <div className=\"contact\">\n                  <h2>Write Your Request</h2>\n                  <br />\n                  <label htmlFor=\"name\">Name:</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    style={{ borderColor: getBorderColor('name') }}\n                    aria-label=\"Name\"\n                  required/>\n\n                  <label htmlFor=\"phone\">Phone:</label>\n                  <input\n                    id=\"phone\"\n                    type=\"number\"\n                    name=\"phone\"\n                    onChange={handleChange}\n                    placeholder=\"000 000 0000\"\n                    style={{ borderColor: getBorderColor('phone') }}\n                    aria-label=\"Phone\"\n                    required/>\n\n                  <label htmlFor=\"email\">Email:</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    style={{ borderColor: getBorderColor('email') }}\n                    aria-label=\"Email\"\n                    required/>\n\n                  <label htmlFor=\"subject\">Subject:</label>\n                  <input\n                    type=\"text\"\n                    name=\"subject\"\n                    onChange={handleChange}\n                    style={{ borderColor: getBorderColor('subject') }}\n                    aria-label=\"Subject\"\n                    /*required*//>\n\n                  <label htmlFor=\"message\">Message:</label>\n                  <textarea\n                    id=\"message\"\n                    name=\"message\"\n                    onChange={handleChange}\n                    rows={4}\n                    style={{ borderColor: getBorderColor('message') }}\n                    aria-label=\"Message\"\n                    defaultValue={\"\"}\n                    required/>\n                  <button className=\"send\" id=\"contact\" type=\"Submit\">\n                    SEND\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </main>\n    </>\n  );\n}\n\n\n\n\n\n// import React, { useState } from 'react';\n// import \"../src/css/contact.css\";\n// import Navbar from \"./components/navbar\";\n// import Footer from \"./components/footer\";\n\n// export default function Contact() {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     phone: '',\n//     email: '',\n//     subject: '',\n//     message: ''\n//   });\n\n//   // State to track touched status of each field\n//   const [touchedFields, setTouchedFields] = useState({\n//     name: false,\n//     phone: false,\n//     email: false,\n//     subject: false,\n//     message: false\n//   });\n\n//   const getBorderColor = (field) => {\n//     const isEmpty = formData[field].trim() === '';\n//     const hasNumber = field === 'name' ? /\\d/.test(formData[field]) : false;\n//     const isValidEmail = field === 'email' ? formData[field].includes('@') : true;\n  \n//     const borderColor = touchedFields[field] ? (isEmpty || hasNumber || !isValidEmail ? 'red' : 'green') : 'transparent';\n  \n//     console.log(`Field: ${field}, IsEmpty: ${isEmpty}, HasNumber: ${hasNumber}, IsValidEmail: ${isValidEmail}, BorderColor: ${borderColor}`);\n    \n//     return borderColor;\n//   };\n  \n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     // Mark the field as touched\n//     setTouchedFields({ ...touchedFields, [name]: true });\n\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n  \n//     // Validate form fields\n//     const isValid = Object.entries(formData).every(([key, value]) => {\n//       switch (key) {\n//         case 'name':\n//           if (value.trim() === '') {\n//             alert('Please enter your name.');\n//             return false;\n//           }\n//           if(/\\d/.test(value)) {\n//             alert('Name cannot contain numbers.');\n//             return false;\n//           }\n//           return /^[A-Za-z]{1,15}$/.test(value);\n//         case 'phone':\n//           if (value.trim() === '' || value.length < 10) {\n//             alert('Please enter a valid phone number with at least 10 digits.');\n//             return false;\n//           }\n//           if (!/^[0-9+]{10,}$/.test(value)) {\n//             alert('Phone number can only contain numbers and the + symbol.');\n//             return false;\n//           }\n//           return true;\n//         case 'email':\n//           if (!value.includes('@')) {\n//             alert('Please enter a valid email address with \"@\" symbol.');\n//             return false;\n//           }\n//           return true;\n//         case 'subject':\n//           if (value.trim() === '') {\n//             alert('Please enter a subject.');\n//             return false;\n//           }\n//           return value.length <= 20;\n//         case 'message':\n//           if (value.trim() === '') {\n//             alert('Please enter a message.');\n//             return false;\n//           }\n//           return value.length <= 40;\n//         default:\n//           return true;\n//       }\n//     });\n  \n//     if (isValid) {\n//       // Form is valid, submit the data or perform further actions\n//       // Example: You can use Formspree or any other service to handle form submission\n//       console.log('Form submitted:', formData);\n//     } else {\n//       // Optionally, display an error message or take other actions\n//       console.log('Form validation failed. Please check the fields.');\n//     }\n//   };\n\n  \n\n//   return (\n//     <>\n//       <Navbar />\n//       <main>\n//         <div id=\"formcontact\">\n//         <form\n//       id=\"contactForm\"\n//       onsubmit=\"validateForm(event)\"\n//       action=\"https://formspree.io/f/xwkdywrd\"\n//       method=\"POST\"\n//       name=\"myform\"\n//       onSubmit={handleSubmit} >\n//             <div className=\"containercont\">\n//               <h1>Reach Out to Us. </h1>\n//               <h1>We Are Just a Message Away!</h1>\n//               <br />\n//               <div className=\"contact-box\">\n//                 <div className=\"contact\">\n//                   <h2>Write Your Request</h2>\n//                   <br />\n//                   <label htmlFor=\"name\">Name:</label>\n//                   <input\n//                     type=\"text\"\n//                     id=\"name\"\n//                     name=\"name\"\n//                     onChange={handleChange}\n//                     style={{ borderColor: getBorderColor('name') }}\n//                     aria-label=\"Name\"\n//                   required/>\n\n//                   <label htmlFor=\"phone\">Phone:</label>\n//                   <input\n//                     id=\"phone\"\n//                     type=\"number\"\n//                     name=\"phone\"\n//                     onChange={handleChange}\n//                     placeholder=\"000 000 0000\"\n//                     style={{ borderColor: getBorderColor('phone') }}\n//                     aria-label=\"Phone\"\n//                     required/>\n\n//                   <label htmlFor=\"email\">Email:</label>\n//                   <input\n//                     type=\"email\"\n//                     id=\"email\"\n//                     name=\"email\"\n//                     onChange={handleChange}\n//                     style={{ borderColor: getBorderColor('email') }}\n//                     aria-label=\"Email\"\n//                     required/>\n\n//                   <label htmlFor=\"subject\">Subject:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"subject\"\n//                     onChange={handleChange}\n//                     style={{ borderColor: getBorderColor('subject') }}\n//                     aria-label=\"Subject\"\n//                     /*required*//>\n\n//                   <label htmlFor=\"message\">Message:</label>\n//                   <textarea\n//                     id=\"message\"\n//                     name=\"message\"\n//                     onChange={handleChange}\n//                     rows={4}\n//                     style={{ borderColor: getBorderColor('message') }}\n//                     aria-label=\"Message\"\n//                     defaultValue={\"\"}\n//                     required/>\n//                   <button className=\"send\" id=\"contact\" type=\"Submit\">\n//                     SEND\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </form>\n//         </div>\n//       </main>\n//       <Footer />\n//     </>\n//   );\n// }\n\n\n\n"],"mappings":"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AAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEP;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA3C,EAAA,CA5XwBD,OAAO;AAAAqD,EAAA,GAAPrD,OAAO;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}