{"ast":null,"code":"var _jsxFileName = \"/Users/ricardopena/e-comercevr2c14/src/components/list.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../css/listobjects.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  filters\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/products').then(response => response.json()).then(data => {\n      setProducts(data);\n      // Initially, set filtered products to all products\n      setFilteredProducts(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  useEffect(() => {\n    // Update filtered products when filters change\n    const newFilteredProducts = products.filter(product => {\n      const matchesProductType = filters.productType ? product.type.includes(filters.productType) : true;\n      const matchesPriceRange = filters.priceRange.length === 2 ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1] : true;\n      return matchesProductType && matchesPriceRange;\n    });\n    setFilteredProducts(newFilteredProducts);\n  }, [filters, products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"container\",\n          children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"one\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"texttop\",\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${process.env.PUBLIC_URL}${product.image}`,\n              alt: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [\"$\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 7\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_s(List, \"Y4ZYA3w8szcSp0PkLkmK/fdmM1E=\");\n_c = List;\nexport default List;\n\n// const List = ({ filters }) => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   // Filtering logic based on the received filters\n//   const filteredProducts = products.filter(product => {\n//     const matchesProductType = filters.productType ? product.type === filters.productType : true;\n//     const matchesPriceRange = filters.priceRange\n//       ? Array.isArray(filters.priceRange)\n//         ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1]\n//         : product.price === filters.priceRange\n//       : true;\n\n//     return matchesProductType && matchesPriceRange;\n//   });\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n\n//       {/* Display filteredProducts instead of all products */}\n//       <ul>\n//         {filteredProducts.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//               src={`${process.env.PUBLIC_URL}${product.image}`}\n//               alt={product.title}\n//               style={{ maxWidth: '100px' }}\n//             />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n// const List = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n//       <ul>\n//         {products.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//   src={`${process.env.PUBLIC_URL}${product.image}`}\n//   alt={product.title}\n//   style={{ maxWidth: '100px' }}\n// />\n\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ProductsPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [filteredProducts, setFilteredProducts] = useState([]);\n//   const [filterCriteria, setFilterCriteria] = useState({\n//     price: '',\n//     productType: '',\n//   });\n\n//   useEffect(() => {\n//     // Fetch data from your server\n//     axios.get('http://localhost:4000/api/products')\n//       .then(response => {\n//         setProducts(response.data);\n//         setFilteredProducts(response.data);\n//       })\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []);\n\n//   const handleFilterChange = (type, value) => {\n//     setFilterCriteria({\n//       ...filterCriteria,\n//       [type]: value,\n//     });\n//   };\n\n//   useEffect(() => {\n//     // Apply filters when filterCriteria changes\n//     let filtered = [...products];\n\n//     if (filterCriteria.price !== '') {\n//       filtered = filtered.filter(product => product.price <= parseFloat(filterCriteria.price));\n//     }\n\n//     if (filterCriteria.productType !== '') {\n//       filtered = filtered.filter(product => product.type === filterCriteria.productType);\n//     }\n\n//     setFilteredProducts(filtered);\n//   }, [filterCriteria, products]);\n\n//   return (\n//     <>\n//       {/* Render your filter components here */}\n//       {/* Example: <PriceFilter onChange={value => handleFilterChange('price', value)} /> */}\n//       {/* Example: <TypeFilter onChange={value => handleFilterChange('productType', value)} /> */}\n\n//       <div className=\"productbox\">\n//         {/* Map through filteredProducts and render each product */}\n//         {filteredProducts.map(product => (\n//           <div key={product.id}>\n//             <p>{product.title}</p>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img src={product.image} alt={product.title} />\n//           </div>\n//         ))}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","List","filters","_s","products","setProducts","filteredProducts","setFilteredProducts","fetch","then","response","json","data","catch","error","console","newFilteredProducts","filter","product","matchesProductType","productType","type","includes","matchesPriceRange","priceRange","length","price","className","children","class","map","id","title","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","image","alt","description","_c","$RefreshReg$"],"sources":["/Users/ricardopena/e-comercevr2c14/src/components/list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../css/listobjects.css\"\n\nconst List = ({ filters }) => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/products')\n      .then((response) => response.json())\n      .then((data) => {\n        setProducts(data);\n        // Initially, set filtered products to all products\n        setFilteredProducts(data);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  useEffect(() => {\n    // Update filtered products when filters change\n    const newFilteredProducts = products.filter(product => {\n      const matchesProductType = filters.productType ? product.type.includes(filters.productType) : true;\n      const matchesPriceRange = filters.priceRange.length === 2\n        ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1]\n        : true;\n\n      return matchesProductType && matchesPriceRange;\n    });\n\n    setFilteredProducts(newFilteredProducts);\n  }, [filters, products]);\n\n  return (\n    \n  <div className=\"productbox\">\n      <div className=\"title\">\n      <div >\n\n{/* Display filteredProducts instead of all products */}\n<ul class=\"container\">\n  {filteredProducts.map((product) => (\n    <li class=\"one\" key={product.id}>\n      <p id=\"texttop\">{product.title}</p>\n      <img\n        src={`${process.env.PUBLIC_URL}${product.image}`}\n        alt={product.title}\n      />\n      <p>{product.description}</p>\n      <p className=\"price\">${product.price}</p>\n    </li>\n  ))}\n</ul>\n</div>\n</div>\n</div>\n);\n};\n\nexport default List;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const List = ({ filters }) => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   // Filtering logic based on the received filters\n//   const filteredProducts = products.filter(product => {\n//     const matchesProductType = filters.productType ? product.type === filters.productType : true;\n//     const matchesPriceRange = filters.priceRange\n//       ? Array.isArray(filters.priceRange)\n//         ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1]\n//         : product.price === filters.priceRange\n//       : true;\n\n//     return matchesProductType && matchesPriceRange;\n//   });\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n\n//       {/* Display filteredProducts instead of all products */}\n//       <ul>\n//         {filteredProducts.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//               src={`${process.env.PUBLIC_URL}${product.image}`}\n//               alt={product.title}\n//               style={{ maxWidth: '100px' }}\n//             />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const List = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n//       <ul>\n//         {products.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//   src={`${process.env.PUBLIC_URL}${product.image}`}\n//   alt={product.title}\n//   style={{ maxWidth: '100px' }}\n// />\n\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ProductsPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [filteredProducts, setFilteredProducts] = useState([]);\n//   const [filterCriteria, setFilterCriteria] = useState({\n//     price: '',\n//     productType: '',\n//   });\n\n//   useEffect(() => {\n//     // Fetch data from your server\n//     axios.get('http://localhost:4000/api/products')\n//       .then(response => {\n//         setProducts(response.data);\n//         setFilteredProducts(response.data);\n//       })\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []);\n\n//   const handleFilterChange = (type, value) => {\n//     setFilterCriteria({\n//       ...filterCriteria,\n//       [type]: value,\n//     });\n//   };\n\n//   useEffect(() => {\n//     // Apply filters when filterCriteria changes\n//     let filtered = [...products];\n\n//     if (filterCriteria.price !== '') {\n//       filtered = filtered.filter(product => product.price <= parseFloat(filterCriteria.price));\n//     }\n\n//     if (filterCriteria.productType !== '') {\n//       filtered = filtered.filter(product => product.type === filterCriteria.productType);\n//     }\n\n//     setFilteredProducts(filtered);\n//   }, [filterCriteria, products]);\n\n//   return (\n//     <>\n//       {/* Render your filter components here */}\n//       {/* Example: <PriceFilter onChange={value => handleFilterChange('price', value)} /> */}\n//       {/* Example: <TypeFilter onChange={value => handleFilterChange('productType', value)} /> */}\n\n//       <div className=\"productbox\">\n//         {/* Map through filteredProducts and render each product */}\n//         {filteredProducts.map(product => (\n//           <div key={product.id}>\n//             <p>{product.title}</p>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img src={product.image} alt={product.title} />\n//           </div>\n//         ))}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default ProductsPage;\n"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAyBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}