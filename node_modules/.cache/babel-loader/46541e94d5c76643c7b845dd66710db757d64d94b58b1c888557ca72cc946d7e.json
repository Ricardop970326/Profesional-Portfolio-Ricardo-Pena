{"ast":null,"code":"var _jsxFileName = \"/Users/ricardopena/e-comercevr2c14/src/components/list.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  filters\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/products').then(response => response.json()).then(data => {\n      setProducts(data);\n      // Initially, set filtered products to all products\n      setFilteredProducts(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  useEffect(() => {\n    // Update filtered products when filters change\n    const newFilteredProducts = products.filter(product => {\n      const matchesProductType = filters.productType ? product.type.includes(filters.productType) : true;\n      const matchesPriceRange = filters.priceRange.length === 2 ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1] : true;\n      return matchesProductType && matchesPriceRange;\n    });\n    setFilteredProducts(newFilteredProducts);\n  }, [filters, products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}${product.image}`,\n          alt: product.title,\n          style: {\n            maxWidth: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"Y4ZYA3w8szcSp0PkLkmK/fdmM1E=\");\n_c = List;\nexport default List;\n\n// const List = ({ filters }) => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   // Filtering logic based on the received filters\n//   const filteredProducts = products.filter(product => {\n//     const matchesProductType = filters.productType ? product.type === filters.productType : true;\n//     const matchesPriceRange = filters.priceRange\n//       ? Array.isArray(filters.priceRange)\n//         ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1]\n//         : product.price === filters.priceRange\n//       : true;\n\n//     return matchesProductType && matchesPriceRange;\n//   });\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n\n//       {/* Display filteredProducts instead of all products */}\n//       <ul>\n//         {filteredProducts.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//               src={`${process.env.PUBLIC_URL}${product.image}`}\n//               alt={product.title}\n//               style={{ maxWidth: '100px' }}\n//             />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n// const List = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n//       <ul>\n//         {products.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//   src={`${process.env.PUBLIC_URL}${product.image}`}\n//   alt={product.title}\n//   style={{ maxWidth: '100px' }}\n// />\n\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ProductsPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [filteredProducts, setFilteredProducts] = useState([]);\n//   const [filterCriteria, setFilterCriteria] = useState({\n//     price: '',\n//     productType: '',\n//   });\n\n//   useEffect(() => {\n//     // Fetch data from your server\n//     axios.get('http://localhost:4000/api/products')\n//       .then(response => {\n//         setProducts(response.data);\n//         setFilteredProducts(response.data);\n//       })\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []);\n\n//   const handleFilterChange = (type, value) => {\n//     setFilterCriteria({\n//       ...filterCriteria,\n//       [type]: value,\n//     });\n//   };\n\n//   useEffect(() => {\n//     // Apply filters when filterCriteria changes\n//     let filtered = [...products];\n\n//     if (filterCriteria.price !== '') {\n//       filtered = filtered.filter(product => product.price <= parseFloat(filterCriteria.price));\n//     }\n\n//     if (filterCriteria.productType !== '') {\n//       filtered = filtered.filter(product => product.type === filterCriteria.productType);\n//     }\n\n//     setFilteredProducts(filtered);\n//   }, [filterCriteria, products]);\n\n//   return (\n//     <>\n//       {/* Render your filter components here */}\n//       {/* Example: <PriceFilter onChange={value => handleFilterChange('price', value)} /> */}\n//       {/* Example: <TypeFilter onChange={value => handleFilterChange('productType', value)} /> */}\n\n//       <div className=\"productbox\">\n//         {/* Map through filteredProducts and render each product */}\n//         {filteredProducts.map(product => (\n//           <div key={product.id}>\n//             <p>{product.title}</p>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img src={product.image} alt={product.title} />\n//           </div>\n//         ))}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","List","filters","_s","products","setProducts","filteredProducts","setFilteredProducts","fetch","then","response","json","data","catch","error","console","newFilteredProducts","filter","product","matchesProductType","productType","type","includes","matchesPriceRange","priceRange","length","price","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","src","process","env","PUBLIC_URL","image","alt","style","maxWidth","id","_c","$RefreshReg$"],"sources":["/Users/ricardopena/e-comercevr2c14/src/components/list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst List = ({ filters }) => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/products')\n      .then((response) => response.json())\n      .then((data) => {\n        setProducts(data);\n        // Initially, set filtered products to all products\n        setFilteredProducts(data);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  useEffect(() => {\n    // Update filtered products when filters change\n    const newFilteredProducts = products.filter(product => {\n      const matchesProductType = filters.productType ? product.type.includes(filters.productType) : true;\n      const matchesPriceRange = filters.priceRange.length === 2\n        ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1]\n        : true;\n\n      return matchesProductType && matchesPriceRange;\n    });\n\n    setFilteredProducts(newFilteredProducts);\n  }, [filters, products]);\n\n  return (\n    <div>\n      <h1>List of Products</h1>\n\n      {/* Display filteredProducts instead of all products */}\n      <ul>\n        {filteredProducts.map((product) => (\n          <li key={product.id}>\n            <h3>{product.title}</h3>\n            <p>{product.description}</p>\n            <p>${product.price}</p>\n            <img\n              src={`${process.env.PUBLIC_URL}${product.image}`}\n              alt={product.title}\n              style={{ maxWidth: '100px' }}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const List = ({ filters }) => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   // Filtering logic based on the received filters\n//   const filteredProducts = products.filter(product => {\n//     const matchesProductType = filters.productType ? product.type === filters.productType : true;\n//     const matchesPriceRange = filters.priceRange\n//       ? Array.isArray(filters.priceRange)\n//         ? product.price >= filters.priceRange[0] && product.price <= filters.priceRange[1]\n//         : product.price === filters.priceRange\n//       : true;\n\n//     return matchesProductType && matchesPriceRange;\n//   });\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n\n//       {/* Display filteredProducts instead of all products */}\n//       <ul>\n//         {filteredProducts.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//               src={`${process.env.PUBLIC_URL}${product.image}`}\n//               alt={product.title}\n//               style={{ maxWidth: '100px' }}\n//             />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const List = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/api/products')\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>List of Products</h1>\n//       <ul>\n//         {products.map((product) => (\n//           <li key={product.id}>\n//             <h3>{product.title}</h3>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img\n//   src={`${process.env.PUBLIC_URL}${product.image}`}\n//   alt={product.title}\n//   style={{ maxWidth: '100px' }}\n// />\n\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default List;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ProductsPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [filteredProducts, setFilteredProducts] = useState([]);\n//   const [filterCriteria, setFilterCriteria] = useState({\n//     price: '',\n//     productType: '',\n//   });\n\n//   useEffect(() => {\n//     // Fetch data from your server\n//     axios.get('http://localhost:4000/api/products')\n//       .then(response => {\n//         setProducts(response.data);\n//         setFilteredProducts(response.data);\n//       })\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []);\n\n//   const handleFilterChange = (type, value) => {\n//     setFilterCriteria({\n//       ...filterCriteria,\n//       [type]: value,\n//     });\n//   };\n\n//   useEffect(() => {\n//     // Apply filters when filterCriteria changes\n//     let filtered = [...products];\n\n//     if (filterCriteria.price !== '') {\n//       filtered = filtered.filter(product => product.price <= parseFloat(filterCriteria.price));\n//     }\n\n//     if (filterCriteria.productType !== '') {\n//       filtered = filtered.filter(product => product.type === filterCriteria.productType);\n//     }\n\n//     setFilteredProducts(filtered);\n//   }, [filterCriteria, products]);\n\n//   return (\n//     <>\n//       {/* Render your filter components here */}\n//       {/* Example: <PriceFilter onChange={value => handleFilterChange('price', value)} /> */}\n//       {/* Example: <TypeFilter onChange={value => handleFilterChange('productType', value)} /> */}\n\n//       <div className=\"productbox\">\n//         {/* Map through filteredProducts and render each product */}\n//         {filteredProducts.map(product => (\n//           <div key={product.id}>\n//             <p>{product.title}</p>\n//             <p>{product.description}</p>\n//             <p>${product.price}</p>\n//             <img src={product.image} alt={product.title} />\n//           </div>\n//         ))}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default ProductsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}